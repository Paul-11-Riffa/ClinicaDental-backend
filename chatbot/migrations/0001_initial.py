# Generated by Django 5.2.6 on 2025-10-29 22:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0021_add_timestamps_to_consulta'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversacionChatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_id', models.CharField(help_text='ID del thread en OpenAI', max_length=100, unique=True)),
                ('assistant_id', models.CharField(help_text='ID del asistente de OpenAI utilizado', max_length=100)),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('cerrada', 'Cerrada'), ('cita_agendada', 'Cita Agendada'), ('derivada_humano', 'Derivada a Humano')], default='activa', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP del usuario que inició la conversación', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent del navegador', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('closed_at', models.DateTimeField(blank=True, help_text='Fecha y hora de cierre de la conversación', null=True)),
                ('empresa', models.ForeignKey(help_text='Empresa/clínica a la que pertenece la conversación', on_delete=django.db.models.deletion.CASCADE, related_name='conversaciones_chatbot', to='api.empresa')),
                ('paciente', models.ForeignKey(blank=True, help_text='Paciente asociado (null si no está registrado aún)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversaciones_chatbot', to='api.paciente')),
            ],
            options={
                'verbose_name': 'Conversación del Chatbot',
                'verbose_name_plural': 'Conversaciones del Chatbot',
                'db_table': 'chatbot_conversacion',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MensajeChatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(blank=True, help_text='ID del mensaje en OpenAI', max_length=100, null=True, unique=True)),
                ('role', models.CharField(choices=[('user', 'Usuario'), ('assistant', 'Asistente'), ('system', 'Sistema')], help_text='Rol del autor del mensaje', max_length=10)),
                ('contenido', models.TextField(help_text='Contenido del mensaje')),
                ('metadata', models.JSONField(blank=True, help_text='Metadata adicional (function calls, etc.)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='chatbot.conversacionchatbot')),
            ],
            options={
                'verbose_name': 'Mensaje del Chatbot',
                'verbose_name_plural': 'Mensajes del Chatbot',
                'db_table': 'chatbot_mensaje',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PreConsulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del paciente', max_length=200)),
                ('edad', models.IntegerField(blank=True, help_text='Edad del paciente', null=True)),
                ('telefono', models.CharField(blank=True, help_text='Teléfono de contacto', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, help_text='Email de contacto', max_length=254, null=True)),
                ('sintomas', models.TextField(help_text='Descripción de síntomas reportados')),
                ('dolor_nivel', models.IntegerField(blank=True, help_text='Nivel de dolor (1-10)', null=True)),
                ('cuando_comenzo', models.CharField(blank=True, help_text='Cuándo comenzaron los síntomas', max_length=200, null=True)),
                ('alergias', models.TextField(blank=True, help_text='Alergias reportadas', null=True)),
                ('condiciones_medicas', models.TextField(blank=True, help_text='Condiciones médicas previas', null=True)),
                ('urgencia', models.CharField(choices=[('alta', 'Alta - Requiere atención inmediata'), ('media', 'Media - Agendar pronto'), ('baja', 'Baja - Programar normal')], default='media', help_text='Nivel de urgencia determinado por el chatbot', max_length=10)),
                ('posible_diagnostico', models.TextField(blank=True, help_text='Posible condición identificada por el chatbot (orientativo)', null=True)),
                ('fecha_preferida', models.DateField(blank=True, help_text='Fecha preferida por el paciente', null=True)),
                ('horario_preferido', models.CharField(blank=True, choices=[('mañana', 'Mañana (8am-12pm)'), ('tarde', 'Tarde (2pm-6pm)'), ('noche', 'Noche (6pm-8pm)'), ('cualquiera', 'Cualquier horario')], default='cualquiera', max_length=20, null=True)),
                ('procesada', models.BooleanField(default=False, help_text='¿Ya fue revisada por recepcionista?')),
                ('notas_recepcionista', models.TextField(blank=True, help_text='Notas de la recepcionista al procesar', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consulta', models.ForeignKey(blank=True, help_text='Consulta creada a partir de esta pre-consulta', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pre_consulta', to='api.consulta')),
                ('conversacion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pre_consulta', to='chatbot.conversacionchatbot')),
            ],
            options={
                'verbose_name': 'Pre-Consulta',
                'verbose_name_plural': 'Pre-Consultas',
                'db_table': 'chatbot_pre_consulta',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='conversacionchatbot',
            index=models.Index(fields=['thread_id'], name='idx_chatbot_thread'),
        ),
        migrations.AddIndex(
            model_name='conversacionchatbot',
            index=models.Index(fields=['paciente'], name='idx_chatbot_paciente'),
        ),
        migrations.AddIndex(
            model_name='conversacionchatbot',
            index=models.Index(fields=['empresa'], name='idx_chatbot_empresa'),
        ),
        migrations.AddIndex(
            model_name='conversacionchatbot',
            index=models.Index(fields=['estado'], name='idx_chatbot_estado'),
        ),
        migrations.AddIndex(
            model_name='mensajechatbot',
            index=models.Index(fields=['conversacion'], name='idx_mensaje_conv'),
        ),
        migrations.AddIndex(
            model_name='mensajechatbot',
            index=models.Index(fields=['role'], name='idx_mensaje_role'),
        ),
        migrations.AddIndex(
            model_name='preconsulta',
            index=models.Index(fields=['urgencia'], name='idx_preconsulta_urgencia'),
        ),
        migrations.AddIndex(
            model_name='preconsulta',
            index=models.Index(fields=['procesada'], name='idx_preconsulta_procesada'),
        ),
    ]
