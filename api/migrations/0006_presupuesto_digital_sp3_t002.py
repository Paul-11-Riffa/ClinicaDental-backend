# Generated by Django 5.2.6 on 2025-10-25 18:23

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0005_update_plan_tratamiento_sp3_t001'),
    ]

    operations = [
        migrations.CreateModel(
            name='PresupuestoDigital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_presupuesto', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Código único de trazabilidad del presupuesto.', unique=True)),
                ('fecha_emision', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del presupuesto.')),
                ('fecha_vigencia', models.DateField(help_text='Fecha límite de validez del presupuesto. Después caduca.')),
                ('fecha_emitido', models.DateTimeField(blank=True, help_text='Fecha en que el presupuesto fue oficialmente emitido.', null=True)),
                ('estado', models.CharField(choices=[('Borrador', 'Borrador (Editable)'), ('Emitido', 'Emitido (Inmutable)'), ('Caducado', 'Caducado'), ('Anulado', 'Anulado')], default='Borrador', help_text='Estado actual del presupuesto.', max_length=20)),
                ('es_tramo', models.BooleanField(default=False, help_text='Indica si es un presupuesto parcial (tramo) o total.')),
                ('numero_tramo', models.PositiveIntegerField(blank=True, help_text='Número de tramo si es presupuesto parcial (1, 2, 3...).', null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, help_text='Suma de todos los items incluidos antes de descuentos.', max_digits=10)),
                ('descuento', models.DecimalField(decimal_places=2, default=0, help_text='Descuento aplicado al presupuesto completo.', max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, help_text='Monto total del presupuesto (subtotal - descuento).', max_digits=10)),
                ('terminos_condiciones', models.TextField(blank=True, help_text='Términos y condiciones específicos de este presupuesto.', null=True)),
                ('notas', models.TextField(blank=True, help_text='Notas adicionales o aclaraciones del presupuesto.', null=True)),
                ('pdf_url', models.URLField(blank=True, help_text='URL del PDF generado del presupuesto (S3 o storage).', max_length=500, null=True)),
                ('pdf_generado', models.BooleanField(default=False, help_text='Indica si se generó el PDF del presupuesto.')),
                ('es_editable', models.BooleanField(default=True, help_text='Indica si el presupuesto puede editarse. Se bloquea al emitir.')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='presupuestos_digitales', to='api.empresa')),
                ('plan_tratamiento', models.ForeignKey(help_text='Plan de tratamiento aprobado del cual se generó este presupuesto.', on_delete=django.db.models.deletion.CASCADE, related_name='presupuestos_digitales', to='api.plandetratamiento')),
                ('usuario_emite', models.ForeignKey(blank=True, help_text='Usuario (odontólogo/admin) que emitió el presupuesto.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='presupuestos_emitidos', to='api.usuario')),
            ],
            options={
                'verbose_name': 'Presupuesto Digital',
                'verbose_name_plural': 'Presupuestos Digitales',
                'db_table': 'presupuesto_digital',
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='ItemPresupuestoDigital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_unitario', models.DecimalField(decimal_places=2, help_text='Precio del servicio para este presupuesto.', max_digits=10)),
                ('descuento_item', models.DecimalField(decimal_places=2, default=0, help_text='Descuento aplicado específicamente a este ítem.', max_digits=10)),
                ('precio_final', models.DecimalField(decimal_places=2, help_text='Precio final después de descuentos (precio_unitario - descuento_item).', max_digits=10)),
                ('permite_pago_parcial', models.BooleanField(default=False, help_text='Indica si este ítem acepta pagos fraccionados.')),
                ('cantidad_cuotas', models.PositiveIntegerField(blank=True, help_text='Número de cuotas disponibles si permite pago parcial.', null=True)),
                ('notas_item', models.TextField(blank=True, help_text='Notas o aclaraciones específicas de este ítem.', null=True)),
                ('orden', models.PositiveIntegerField(default=0, help_text='Orden de visualización del ítem en el presupuesto.')),
                ('item_plan', models.ForeignKey(help_text='Ítem del plan de tratamiento que representa este presupuesto.', on_delete=django.db.models.deletion.CASCADE, related_name='items_en_presupuestos', to='api.itemplandetratamiento')),
                ('presupuesto', models.ForeignKey(help_text='Presupuesto al que pertenece este ítem.', on_delete=django.db.models.deletion.CASCADE, related_name='items_presupuesto', to='api.presupuestodigital')),
            ],
            options={
                'verbose_name': 'Ítem de Presupuesto',
                'verbose_name_plural': 'Ítems de Presupuesto',
                'db_table': 'item_presupuesto_digital',
                'ordering': ['presupuesto', 'orden'],
            },
        ),
        migrations.AddIndex(
            model_name='presupuestodigital',
            index=models.Index(fields=['plan_tratamiento', 'estado'], name='presupuesto_plan_tr_1901d8_idx'),
        ),
        migrations.AddIndex(
            model_name='presupuestodigital',
            index=models.Index(fields=['empresa', 'fecha_emision'], name='presupuesto_empresa_39172b_idx'),
        ),
        migrations.AddIndex(
            model_name='presupuestodigital',
            index=models.Index(fields=['codigo_presupuesto'], name='presupuesto_codigo__0e39c4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='itempresupuestodigital',
            unique_together={('presupuesto', 'item_plan')},
        ),
    ]
