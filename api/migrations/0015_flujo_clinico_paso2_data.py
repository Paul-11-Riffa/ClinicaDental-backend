# Generated by Django 5.2.7 on 2025-10-28 15:04

from django.db import migrations


def poblar_estado_tratamiento_default(apps, schema_editor):
    """
    Pobla el campo estado_tratamiento con 'Propuesto' para planes existentes
    que tengan NULL en ese campo.
    
    También establece orden_ejecucion default para items existentes.
    """
    Plandetratamiento = apps.get_model('api', 'Plandetratamiento')
    Itemplandetratamiento = apps.get_model('api', 'Itemplandetratamiento')
    
    # Actualizar planes sin estado_tratamiento
    planes_sin_estado = Plandetratamiento.objects.filter(estado_tratamiento__isnull=True)
    count_planes = planes_sin_estado.update(estado_tratamiento='Propuesto')
    
    print(f"  ✅ {count_planes} planes actualizados con estado_tratamiento='Propuesto'")
    
    # Actualizar items sin orden_ejecucion (asignar orden secuencial por plan)
    items_sin_orden = Itemplandetratamiento.objects.filter(orden_ejecucion__isnull=True)
    
    if items_sin_orden.exists():
        # Agrupar por plan y asignar orden
        planes_con_items = items_sin_orden.values_list('idplantratamiento', flat=True).distinct()
        
        count_items = 0
        for plan_id in planes_con_items:
            items = Itemplandetratamiento.objects.filter(
                idplantratamiento=plan_id,
                orden_ejecucion__isnull=True
            ).order_by('id')
            
            for orden, item in enumerate(items, start=1):
                item.orden_ejecucion = orden
                item.save(update_fields=['orden_ejecucion'])
                count_items += 1
        
        print(f"  ✅ {count_items} items actualizados con orden_ejecucion secuencial")
    else:
        print(f"  ℹ️  Todos los items ya tienen orden_ejecucion")


def revertir_poblacion(apps, schema_editor):
    """
    Revierte la población de datos (opcional - deja los valores NULL de nuevo).
    """
    # No es necesario revertir, los valores son sensibles y no deberían eliminarse
    print("  ℹ️  No se revierten cambios de datos (operación segura)")


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0014_flujo_clinico_paso1'),
    ]

    operations = [
        migrations.RunPython(
            poblar_estado_tratamiento_default,
            reverse_code=revertir_poblacion
        ),
    ]
