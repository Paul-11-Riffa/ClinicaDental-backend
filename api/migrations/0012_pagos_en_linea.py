# Generated by Django 5.2.7 on 2025-10-28 02:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0011_evidencia'),
    ]

    operations = [
        migrations.CreateModel(
            name='PagoEnLinea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_pago', models.CharField(help_text='Código único del pago (ej: PAY-2025-001234)', max_length=50, unique=True)),
                ('origen_tipo', models.CharField(choices=[('plan_completo', 'Plan de Tratamiento Completo'), ('items_individuales', 'Ítems Individuales del Plan'), ('consulta', 'Consulta/Cita')], help_text='Tipo de origen: plan completo, ítems o consulta', max_length=30)),
                ('tipo_pago_consulta', models.CharField(blank=True, choices=[('prepago', 'Prepago (Adelanto)'), ('copago', 'Copago (Pago Parcial)'), ('saldo_pendiente', 'Saldo Pendiente')], help_text='Tipo específico de pago para consultas', max_length=20, null=True)),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto total del pago', max_digits=10)),
                ('moneda', models.CharField(default='BOB', help_text='Código de moneda (BOB, USD, etc.)', max_length=3)),
                ('monto_original', models.DecimalField(decimal_places=2, help_text='Monto original del origen (para cálculo de saldo)', max_digits=10)),
                ('saldo_anterior', models.DecimalField(decimal_places=2, default=0, help_text='Saldo pendiente antes de este pago', max_digits=10)),
                ('saldo_nuevo', models.DecimalField(decimal_places=2, default=0, help_text='Saldo pendiente después de este pago', max_digits=10)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('procesando', 'Procesando'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado'), ('cancelado', 'Cancelado'), ('reembolsado', 'Reembolsado'), ('anulado', 'Anulado')], default='pendiente', help_text='Estado actual del pago', max_length=20)),
                ('metodo_pago', models.CharField(choices=[('tarjeta', 'Tarjeta de Crédito/Débito'), ('transferencia', 'Transferencia Bancaria'), ('qr', 'Código QR')], default='tarjeta', help_text='Método de pago utilizado', max_length=20)),
                ('stripe_payment_intent_id', models.CharField(blank=True, help_text='ID del Payment Intent en Stripe', max_length=255, null=True, unique=True)),
                ('stripe_charge_id', models.CharField(blank=True, help_text='ID del Charge en Stripe', max_length=255, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, help_text='ID del Customer en Stripe', max_length=255, null=True)),
                ('stripe_metadata', models.JSONField(blank=True, default=dict, help_text='Metadata adicional de Stripe')),
                ('descripcion', models.TextField(help_text='Descripción del pago')),
                ('motivo_rechazo', models.TextField(blank=True, help_text='Motivo de rechazo si el pago falla', null=True)),
                ('numero_intentos', models.IntegerField(default=0, help_text='Número de intentos de pago realizados')),
                ('ultimo_intento', models.DateTimeField(blank=True, help_text='Fecha y hora del último intento', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP desde donde se realizó el pago', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent del navegador', null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro de pago')),
                ('fecha_procesamiento', models.DateTimeField(blank=True, help_text='Fecha en que se procesó el pago', null=True)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, help_text='Fecha en que se aprobó el pago', null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Última actualización del registro')),
                ('consulta', models.ForeignKey(blank=True, help_text='Consulta si el origen es cita', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pagos_en_linea', to='api.consulta')),
                ('empresa', models.ForeignKey(help_text='Empresa (tenant) dueña del pago', on_delete=django.db.models.deletion.CASCADE, related_name='pagos_en_linea', to='api.empresa')),
                ('factura', models.ForeignKey(blank=True, help_text='Factura generada tras el pago (si aplica)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos_en_linea', to='api.factura')),
                ('plan_tratamiento', models.ForeignKey(blank=True, help_text='Plan de tratamiento si el origen es plan', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pagos_en_linea', to='api.plandetratamiento')),
                ('usuario', models.ForeignKey(help_text='Usuario que realizó el pago (paciente)', on_delete=django.db.models.deletion.PROTECT, related_name='pagos_realizados', to='api.usuario')),
            ],
            options={
                'verbose_name': 'Pago en Línea',
                'verbose_name_plural': 'Pagos en Línea',
                'db_table': 'pago_en_linea',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='DetallePagoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_item_total', models.DecimalField(decimal_places=2, help_text='Costo total del ítem', max_digits=10)),
                ('monto_pagado_anterior', models.DecimalField(decimal_places=2, default=0, help_text='Monto pagado del ítem antes de este pago', max_digits=10)),
                ('monto_pagado_ahora', models.DecimalField(decimal_places=2, help_text='Monto pagado del ítem en este pago', max_digits=10)),
                ('monto_pagado_total', models.DecimalField(decimal_places=2, help_text='Monto total pagado del ítem tras este pago', max_digits=10)),
                ('saldo_restante', models.DecimalField(decimal_places=2, help_text='Saldo pendiente del ítem tras este pago', max_digits=10)),
                ('item_completamente_pagado', models.BooleanField(default=False, help_text='Indica si el ítem quedó completamente pagado')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, help_text='Fecha de registro del detalle')),
                ('item_plan', models.ForeignKey(help_text='Ítem del plan de tratamiento', on_delete=django.db.models.deletion.PROTECT, related_name='detalles_pago', to='api.itemplandetratamiento')),
                ('pago', models.ForeignKey(help_text='Pago al que pertenece este detalle', on_delete=django.db.models.deletion.CASCADE, related_name='detalles_items', to='api.pagoenlinea')),
            ],
            options={
                'verbose_name': 'Detalle de Pago por Ítem',
                'verbose_name_plural': 'Detalles de Pago por Ítem',
                'db_table': 'detalle_pago_item',
                'ordering': ['pago', 'item_plan'],
            },
        ),
        migrations.CreateModel(
            name='ComprobanteDigital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_comprobante', models.CharField(help_text='Código único del comprobante (ej: COMP-2025-001234)', max_length=50, unique=True)),
                ('codigo_verificacion', models.CharField(help_text='Código de verificación (hash SHA256)', max_length=64, unique=True)),
                ('archivo_pdf', models.FileField(blank=True, help_text='Archivo PDF del comprobante', null=True, upload_to='comprobantes/pagos/%Y/%m/%d/')),
                ('url_publica', models.URLField(blank=True, help_text='URL pública para acceder al comprobante', max_length=500, null=True)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('anulado', 'Anulado')], default='activo', help_text='Estado del comprobante', max_length=20)),
                ('fecha_emision', models.DateTimeField(auto_now_add=True, help_text='Fecha de emisión del comprobante')),
                ('fecha_anulacion', models.DateTimeField(blank=True, help_text='Fecha de anulación (si aplica)', null=True)),
                ('motivo_anulacion', models.TextField(blank=True, help_text='Motivo de anulación', null=True)),
                ('datos_comprobante', models.JSONField(default=dict, help_text='Datos adicionales del comprobante (paciente, detalles, etc.)')),
                ('enviado_email', models.BooleanField(default=False, help_text='Indica si se envió por email')),
                ('fecha_envio_email', models.DateTimeField(blank=True, help_text='Fecha de envío por email', null=True)),
                ('empresa', models.ForeignKey(help_text='Empresa emisora del comprobante', on_delete=django.db.models.deletion.CASCADE, related_name='comprobantes_pago', to='api.empresa')),
                ('pago', models.OneToOneField(help_text='Pago asociado a este comprobante', on_delete=django.db.models.deletion.CASCADE, related_name='comprobante', to='api.pagoenlinea')),
            ],
            options={
                'verbose_name': 'Comprobante Digital de Pago',
                'verbose_name_plural': 'Comprobantes Digitales de Pago',
                'db_table': 'comprobante_digital_pago',
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.AddIndex(
            model_name='pagoenlinea',
            index=models.Index(fields=['empresa', '-fecha_creacion'], name='pago_en_lin_empresa_a4b710_idx'),
        ),
        migrations.AddIndex(
            model_name='pagoenlinea',
            index=models.Index(fields=['estado', '-fecha_creacion'], name='pago_en_lin_estado_a327d1_idx'),
        ),
        migrations.AddIndex(
            model_name='pagoenlinea',
            index=models.Index(fields=['usuario', '-fecha_creacion'], name='pago_en_lin_usuario_230e11_idx'),
        ),
        migrations.AddIndex(
            model_name='pagoenlinea',
            index=models.Index(fields=['plan_tratamiento'], name='pago_en_lin_plan_tr_7297d1_idx'),
        ),
        migrations.AddIndex(
            model_name='pagoenlinea',
            index=models.Index(fields=['consulta'], name='pago_en_lin_consult_bb1b65_idx'),
        ),
        migrations.AddIndex(
            model_name='pagoenlinea',
            index=models.Index(fields=['stripe_payment_intent_id'], name='pago_en_lin_stripe__0937a5_idx'),
        ),
        migrations.AddConstraint(
            model_name='pagoenlinea',
            constraint=models.CheckConstraint(condition=models.Q(('monto__gt', 0)), name='pago_monto_positivo', violation_error_message='El monto debe ser mayor a 0'),
        ),
        migrations.AddConstraint(
            model_name='pagoenlinea',
            constraint=models.CheckConstraint(condition=models.Q(('saldo_nuevo__gte', 0)), name='pago_saldo_no_negativo', violation_error_message='El saldo nuevo no puede ser negativo'),
        ),
        migrations.AddIndex(
            model_name='detallepagoitem',
            index=models.Index(fields=['pago'], name='detalle_pag_pago_id_20a9c6_idx'),
        ),
        migrations.AddIndex(
            model_name='detallepagoitem',
            index=models.Index(fields=['item_plan'], name='detalle_pag_item_pl_8f9402_idx'),
        ),
        migrations.AddConstraint(
            model_name='detallepagoitem',
            constraint=models.UniqueConstraint(fields=('pago', 'item_plan'), name='unique_pago_item', violation_error_message='Ya existe un detalle para este ítem en este pago'),
        ),
        migrations.AddConstraint(
            model_name='detallepagoitem',
            constraint=models.CheckConstraint(condition=models.Q(('monto_pagado_ahora__gt', 0)), name='detalle_monto_positivo', violation_error_message='El monto pagado debe ser mayor a 0'),
        ),
        migrations.AddConstraint(
            model_name='detallepagoitem',
            constraint=models.CheckConstraint(condition=models.Q(('saldo_restante__gte', 0)), name='detalle_saldo_no_negativo', violation_error_message='El saldo restante no puede ser negativo'),
        ),
        migrations.AddIndex(
            model_name='comprobantedigital',
            index=models.Index(fields=['codigo_comprobante'], name='comprobante_codigo__bf9421_idx'),
        ),
        migrations.AddIndex(
            model_name='comprobantedigital',
            index=models.Index(fields=['codigo_verificacion'], name='comprobante_codigo__37f93a_idx'),
        ),
        migrations.AddIndex(
            model_name='comprobantedigital',
            index=models.Index(fields=['empresa', '-fecha_emision'], name='comprobante_empresa_cfcfde_idx'),
        ),
        migrations.AddIndex(
            model_name='comprobantedigital',
            index=models.Index(fields=['estado'], name='comprobante_estado_7b7a59_idx'),
        ),
    ]
